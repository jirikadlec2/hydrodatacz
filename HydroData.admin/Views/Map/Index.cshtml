@{
    ViewBag.Title = T.Text("title.map");
}

@model HydroData.Public.Models.StationViewModel
@section head{

    <link href="@Url.Content("~/Content/chosen/chosen.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/chosen.jquery.min.js")"></script>
    <script src="http://maps.google.com/maps/api/js?sensor=false"
            type="text/javascript"></script>

}

<div>
    <h1>Map </h1>

    @T.Text("text.SelectVariable")
    <table style="width:70%;">
        <tr>

            @foreach (var vr in Helper.Vars.Values)
            {
                <td>
                    @Html.ActionLink(T.Text(vr.PageName), "index", "map",
                                       new
                                       {
                                           varname = vr.TableName,
                                       }, null)
                </td>
            }
        </tr>
    </table>

    @using (Html.BeginForm("findbyaddress", "map", FormMethod.Post, new { id = "f_addr" }))
    {
        <table style="width: 60%;">
            <tr>
                <td style="width: 30%;">@T.Text("text.Address"):</td>
                <td>
                    @Html.TextBox("address")
                </td>
                <td style="width: 30%;">
                    <input type="submit" name="findbyaddr" value="@T.Text("findbyaddress")" />
                </td>

            </tr>
        </table>

    }
    @if (Helper.IsAdmin(User.Identity.Name))
    {
        <text>
            @T.Text("query time") : @ViewBag.elapsed
        </text>
    }
    <br />

    @T.Text("markers count"): @Model.Stations.Count()
    <br />
    @T.Text("found places") :
    <br />
    @Html.Raw(ViewBag.findresult)

    <div id="map" style="width: @Helper.AppConfigValue("GoogleMapSize")px; height: @Helper.AppConfigValue("GoogleMapSize")px;margin-top:15px;"></div>
    @{
        string data = "";
        var slat = "50";
        var slon = "15";

        foreach (var st in Model.Stations)
        {

            var link = Html.ActionLink(T.Text("link.GoToChart"), "Index", "charts",
                           new
                           {
                               varname = Model.VarName,
                               sturi = st.UrlParm
                           },
                           new { target = "_blank" });

            var info = string.Format("<b>{0}</b><br />{1}<br />{2} {3}",
                st.st_name, link, T.Text("last obs date"), st.LastObservDate);

            data += string.Format("['{0}',{1},{2}],", info,
            st.lat.ToStrWithPoint(), st.lon.ToStrWithPoint());
        }

        // find by address
        int zoom = 7;
        var loc = (string[])ViewBag.Place;
        if (loc != null)
        {
            zoom = 11;
            slat = loc[0];
            slon = loc[1];
        }

    }
    <script type="text/javascript">
        var locations = [@Html.Raw(data.TrimEnd(','))];

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: @zoom,
            center: new google.maps.LatLng(@slat, @slon),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }
    </script>

</div>
