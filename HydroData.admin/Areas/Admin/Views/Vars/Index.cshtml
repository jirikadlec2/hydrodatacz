@model HydroData.admin.Models.ChartViewModel
@{
    ViewBag.Title = "Observations - " + Model.VarName;
}
@section head{
    @*    <script src="@Url.Content("~/Scripts/site/widget.autocomplete.js")" type="text/javascript"></script>*@
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <link href="@Url.Content("~/Content/chosen/chosen.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/chosen.jquery.min.js")"></script>

}

<script>

    $(function () {
        //$("#StatId").combobox();
        $("#StatId").chosen();

        $('.date').datepicker({ dateFormat: "@Helper.DATE_FORMAT" });
    });

</script>

@{

    var items = Model.Page.Items;

    int[] xx;
    float[] yy;
    var axisXTitle = "";
    var valDescr = Helper.Vars[Model.VarId].MeasureUnit;

    if (Model.VarId == 8 || Model.VarId == 2)
    {
        var gr = items.GroupBy(x => x.DateTime.Date);
        xx = gr.Select(x => x.Key.Day).ToArray();
        yy = gr.Select(x => x.Average(k => k.ValueForCalc(Model.VarId))).ToArray();
        axisXTitle = T.Text("Days");
    }
    else
    {
        xx = items.Select(x => x.DateTime.Hour).ToArray();
        yy = items.Select(x => x.ValueForCalc(Model.VarId)).ToArray();
        axisXTitle = T.Text("Hours");
    }

    var stat = Model.Stations.FirstOrDefault(x => x.Value == Model.StatId + "");
    var stName = "";
    if (stat != null) { stName = stat.Text; }
    var chartTitle = string.Format("{0}(ID={1})", stName, Model.StatId);

    var chartData = "";
    for (int i = 0; i < xx.Length; i++)
    {
        chartData += string.Format("['{0}',{1}],", xx[i], yy[i].ToStrWith());
    }
    
}

<script type="text/javascript">

    google.load('visualization', '1.0', { 'packages': ['corechart'] });
    google.setOnLoadCallback(drawChart);

    function drawChart() {

        var data = new google.visualization.DataTable();
        data.addColumn('string', 'day');
        data.addColumn('number', '@T.Text(valDescr)');
        data.addRows([
              @Html.Raw(chartData.TrimEnd(','))
        ]);

        var options = {
            'title': '@Html.Raw(chartTitle)',
            'width': 500,
            'height': 300,
            'hAxis': { title: '@axisXTitle' }
        };

        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    };

</script>


<h2>@T.Text("vars.bodytitle") @Model.VarName</h2>
@if (Model.Date.HasValue)
{ 
    @Html.ActionLink(T.Text("link.GoToChart"), "Index", "Charts",
                        new { varid = Model.VarId, statid = Model.StatId, date = Model.Date.Value.ToShortDateString() }, null)

}
<br />
<br />
@using (Html.BeginForm("Index", "Vars", new { varid = Model.VarId }, FormMethod.Post, new { id = "f_show" }))
{ 
    <table>
        <tr>
            <td>@T.Text("text.SelectStation"): </td>
            <td style="width: 150px;">

                @Html.DropDownListFor(m => m.StatId, Model.Stations, "--" + T.Text("text.SelectStation") + "--")
            </td>
        </tr>
        <tr>
            <td>@T.Text("text.Date"):</td>
            <td>
                @Html.TextBox("date", Model.Date, new { @class = "date" })
            </td>
        </tr>
    </table>
    <br />
  
    @Html.Hidden("pg", Model.Page.CurrentPage);
    <input type="submit" name="act" value="@T.Text("show")" />
}

<br />
<br />
@T.Text("page") @Model.Page.CurrentPage @T.Text("out_of") @Model.Page.TotalPages
@Html.Partial("_PageNav", new Helpers.SPage { UrlTempl = Model.UrlTempl, CurrPage = Model.Page.CurrentPage, TotalPages = Model.Page.TotalPages })
<br />

@Html.Partial("_Details", Model)

